{"name":"Widget","tagline":"Simple Widget System for Laravel Framework","body":"Simple Widget System for Laravel Framework\r\n==================================\r\n\r\n[![Build Status](https://travis-ci.org/gravitano/widget.svg?branch=master)](https://travis-ci.org/gravitano/widget)\r\n[![Latest Stable Version](https://poser.pugx.org/pingpong/widget/v/stable.svg)](https://packagist.org/packages/pingpong/widget) [![Total Downloads](https://poser.pugx.org/pingpong/widget/downloads.svg)](https://packagist.org/packages/pingpong/widget) [![Latest Unstable Version](https://poser.pugx.org/pingpong/widget/v/unstable.svg)](https://packagist.org/packages/pingpong/widget) [![License](https://poser.pugx.org/pingpong/widget/license.svg)](https://packagist.org/packages/pingpong/widget)\r\n\r\n### Installation\r\n\r\nOpen your composer.json file and add the new required package.\r\n\r\n```\r\n    \"pingpong/widget\" : \"1.0.*\"\r\n```\r\n\r\nNext, open your terminal and run `composer update`.\r\n\r\nAfter composer updated, add new service provider in `app/config/app.php` :\r\n\r\n```php\r\n    'Pingpong\\Widget\\WidgetServiceProvider',\r\n```\r\n\r\nAnd add facade in the same file\r\n\r\n```php\r\n    'Widget' => 'Pingpong\\Widget\\Facades\\Widget'\r\n```\r\n\r\nDone.\r\n\r\n### Registering A Widget\r\n\r\nBy default you can register a widget in `app/widgets.php`, that file will autoload automatically.\r\n\r\nVia Closure.\r\n\r\n```php\r\n// app/widgets.php\r\n\r\nWidget::register('small', function($contents)\r\n{\r\n\treturn \"<small>{$contents}</small>\";\r\n});\r\n\r\nWidget::register('view', function($view, $data = array(), $mergeData = array()\r\n{\r\n\treturn View::make($view, $data, $mergeData)->render();\r\n});\r\n\r\n```\r\n\r\nVia Class Name. \r\n\r\nBy default will call `register` method.\r\n\r\n```php\r\nclass MyWidget {\r\n\r\n\tpublic function register($contents, $attributes = array())\r\n\t{\r\n\t    $attributes = HTML::attributes($attributes);\r\n\t    \r\n\t\treturn \"<h1{$attributes}>{$contents}</h1>\";\r\n\t}\r\n\r\n} \r\n\r\nWidget::register('h1', 'MyWidget');\r\n```\r\n\r\nVia Class Name with the specified method.\r\n\r\n```php\r\n\r\nclass TagCreator {\r\n\t\r\n\tpublic function create($tag, $contents, $attributes = array())\r\n\t{\r\n\t\t$attributes = HTML::attributes($attributes);\r\n\r\n\t\treturn \"<{$tag}{$attributes}>{$contents}</{$tag}>\";\r\n\t}\r\n\r\n} \r\n\r\nclass HTMLWidget {\r\n\r\n\tprotected $tag;\r\n\r\n\tpublic function __construct(TagCreator $tag)\r\n\t{\r\n\t\t$this->tag = $tag;\r\n\t}\r\n\r\n\tpublic function p($contents, $attributes = array())\r\n\t{\r\n\t\treturn $this->tag->create('p', $contents, $attributes);\r\n\t}\r\n\r\n\tpublic function div($contents, $attributes = array())\r\n\t{\r\n\t\treturn $this->tag->create('div', $contents, $attributes);\r\n\t}\r\n} \r\nWidget::register('p', 'HTMLWidget@p');\r\n\r\nWidget::register('div', 'HTMLWidget@div');\r\n\r\n```\r\n\r\n### Calling A Widget\r\n\r\n```php\r\nWidget::get('small', array('My Content'));\r\n\r\nWidget::call('small', array('My Content'));\r\n\r\nWidget::small('My Content');\r\n\r\nWidget::p('My Content');\r\n\r\nWidget::div('My Content');\r\n\r\nWidget::h1('My Content');\r\n```\r\n\r\nOn view you can call like this.\r\n\r\n```\r\n@small('My Content')\r\n\r\n@view('users.show', $data, $mergeData)\r\n\r\n@h1('Welcome!')\r\n\r\n@p('Hello World', array('class' => 'page-header'));\r\n\r\n@div('Lorem ipsum', array('class' => 'alert alert-warning'));\r\n```\r\n\r\n### Grouping A Widget\r\n\r\nIt is very easy to group widget. you only need to specify the group name and specify an array of the names of the widgets that will be grouped.\r\n\r\n```php\r\nWidget::register('calendar', 'SidebarWidget@calendar')\r\n\r\nWidget::register('archive', 'SidebarWidget@archive')\r\n\r\nWidget::group('sidebar', array('calendar', 'archive'));\r\n```\r\n\r\nTo call a group of widgets is the same as calling the widget.\r\n\r\n```php\r\nWidget::sidebar();\r\n```\r\n\r\nIf you want to send parameters to the widget that is in the group, you can call it like this.\r\n\r\n```php\r\nWidget::sidebar(\r\n\tarray('your-first-param', 'your-second-param'),\r\n\tarray('first-param-for-second-widget', 'the-second')\r\n);\r\n```\r\n\r\nOn view you can call a group of widgets is same as calling the widget.\r\n\r\n```\r\n@sidebar()\r\n\r\n@sidebar(array('first-param'), array('first-param-for-second-widget'))\r\n```\r\n\r\n### License\r\n\r\nThis package is open-sourced software licensed under the [MIT license](http://opensource.org/licenses/MIT)","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}